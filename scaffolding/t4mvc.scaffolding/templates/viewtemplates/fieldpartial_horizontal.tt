<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<# if (Field.References == null)
        {
#>
                    <!-- <#= (Field.Description ?? Field.Name) #> -->
                    <div class="form-group"<#= Field.RenderFunction == null ? "" : " data-render-function='" + Field.RenderFunction + "'"#>>
                        @Html.LabelFor(model => model.<#=                Field.Name.ToSchemaName() #>, htmlAttributes: new { @class = "control-label col-md-<#= LabelColumns #>" })
                        <div class="col-md-<#= FieldColumns #>">
                            @Html.t4mvcEditorFor(model => model.<#=                Field.Name.ToSchemaName() #>, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.<#=                Field.Name.ToSchemaName() #>, "", new { @class = "text-danger" })
                        </div>
                    </div><#

        }
        else
        {
#>
                    <!-- <#= (Field.Description ?? Field.Name) #> -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.<#=                Field.Name.ToSchemaName() #>, htmlAttributes: new { @class = "control-label col-md-<#= LabelColumns #>" })
                        <div class="col-md-<#= FieldColumns #>">
                            @Html.Select2EditorFor(x => x.<#= Field.Name.ToSchemaName() #>, x => x.<#= Field.Name.ToSchemaName() #>, x => x.<#= Field.Name.ToSchemaName() + Field.References.NameField.Name.ToSchemaName() #>)
                            @Html.ValidationMessageFor(model => model.<#=                Field.Name.ToSchemaName() #>, "", new { @class = "text-danger" })
                        </div>
                    </div><#

        }#>