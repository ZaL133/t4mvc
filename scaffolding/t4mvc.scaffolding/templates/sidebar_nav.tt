<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<ul class="nav nav-pills flex-column mb-auto">
<# foreach(var area in Settings.Entities.Where(x => !x.DontScaffold && !x.NoNav).GroupBy(x => new { x.Area, x.AreaText })) { var areaDefinition = (area.Key.AreaText == null || !Settings.AreaDictionary.ContainsKey(area.Key.AreaText)) ? (Area)null : Settings.AreaDictionary[area.Key.AreaText]; #>
    // Area: <#= area.Key.AreaText #>
    <li class="mb-1 nav-item">
        <button class="btn btn-toggle align-items-center rounded collapsed nav-link" data-bs-toggle="collapse" data-bs-target="#<#= area.Key.AreaText.ToSchemaName() #>-collapse">
            <#= area.Key.AreaText #>
        </button>
        <div class="collapse" id="<#= area.Key.AreaText.ToSchemaName() #>-collapse">
            <ul class="btn-toggle-nav list-unstyled fw-normal pb-1">
<# foreach(var entity in area.Where(x => !x.NoNav).OrderBy(x=> x.Name)) { #><li class="nav-item">
                    <a <# if (area.Key.AreaText != null && area.Key.AreaText != "") { #>asp-area="<#=area.Key.AreaText #>" <# } #>asp-controller="<#= entity.Name.ToSchemaName() #>" asp-action="index" class="nav-link">
                        <i data-feather="home"></i>
                        <#= entity.Name #>
                    </a>
                </li>
<# } #>
            </ul>
        </div>
    </li>
<# } #>
</ul>