<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #><#
    var schemaName = Settings.ApplicationName;
    var apiController = schemaName + "ApiController";
#>
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Web;
using System.Net.Http;
using Microsoft.AspNetCore.Mvc;
using <#= Settings.ApplicationName #>.web.core.Infrastructure;
using <#= Settings.ApplicationName #>.web.core.Models;
using Newtonsoft.Json.Linq;
using OfficeOpenXml;

namespace <#= schemaName #>.web.Controllers
{
    [ApiController]
    [Route("api/export")]
    public partial class ExportExcelController
    {
        readonly I<#= apiController #> <#= apiController #>;

        public ExportExcelController(I<#= apiController #> <#= apiController #>)
        {
            this.<#= apiController #> = <#= apiController #>;
        }

<#
foreach(var entity in Settings.Entities)
{
        var methodName = $"Get{entity.Name}s";
#>
        [Route("<#= methodName.ToCamelCase() #>")]
        public IActionResult <#= methodName #>(string cacheKey)
        {
            var request = Current.GetDataTablesParameters(nameof(<#= apiController #>.<#= methodName #>), cacheKey);
            return ConvertToExcel(request, () => <#= apiController #>.<#= methodName #>(request, cacheKey), $"<#= entity.Name #>s_{DateTime.Now.ToString("yyyyMMdd")}.xlsx");
        }
<#    } #>
    }
}